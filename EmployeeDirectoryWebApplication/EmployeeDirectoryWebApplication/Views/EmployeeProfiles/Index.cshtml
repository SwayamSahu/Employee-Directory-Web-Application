@model IEnumerable<EmployeeDirectoryWebApplication.Models.EmployeeProfile>
@using EmployeeDirectoryWebApplication.Models;
@{
    ViewData["Title"] = "Employee Profiles";
}


<h1 class="my-4 text-center">Employee Profiles</h1>

<div class="mb-3 text-right">
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</div>

<div class="row mb-3">
    <div class="col-md-6 offset-md-3">
        <div class="input-group">
            <input type="text" class="form-control" id="searchInput" placeholder="Search by name">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" id="searchButton">Search</button>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Employee Name
                </th>
                <th>
                    Profile Pic
                </th>
                <th>
                    Status
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Designation)
                </th>
                <th>
                    Department
                </th>
                <th>
                    Manager Name
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="employeeList">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeName)
                    </td>
                    <td class="d-flex justify-content-center">
                        <img src="@item.EmployeeProfilePic" class="img-thumbnail" style="max-width: 50px; max-height: 50px;" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmploymentStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Designation.DesignationName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Dept.DepartmentName)
                    </td>
                    <td>
                        @{
                            var manager = Model.FirstOrDefault(e => e.EmployeeId == item.ManagerId);
                            var managerName = manager != null ? manager.EmployeeName : "No Manager";
                        }
                        @managerName
                    </td>

                    <td>
                        @if (User.IsInRole("Admin"))
                        {
                            <a class="btn btn-info btn-sm" asp-action="Edit" asp-route-id="@item.EmployeeId">
                                <span class="glyphicon glyphicon-pencil"></span> Edit
                            </a>
                        }
                        <a class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.EmployeeId">
                            <span class="glyphicon glyphicon-info-sign"></span> Details
                        </a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.EmployeeId">
                                <span class="glyphicon glyphicon-trash"></span> Delete
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#searchButton').click(function () {
                var value = $('#searchInput').val().toLowerCase();
                $('#employeeList tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });
        });
    </script>
}
